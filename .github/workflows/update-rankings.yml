name: Update Fixtures

on:
  schedule:
    - cron: "0 */6 * * *" # every 6 hours
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Fetch Fixtures
        env:
          API_KEY: ${{ secrets.API_FOOTBALL_KEY }}
        run: |
          TEAM_ID=$(cat ./assets/teamid.txt)
          curl -s "https://v3.football.api-sports.io/fixtures?season=2025&team=$TEAM_ID" \
            -H "x-apisports-key: $API_KEY" \
            -o tmp/fixtures.json

      - name: Build ICS file
        run: |
          mkdir -p public/cal
          ICS_FILE=public/cal/fixtures.ics
          echo "BEGIN:VCALENDAR" > $ICS_FILE
          echo "VERSION:2.0" >> $ICS_FILE
          echo "PRODID:-//GitHub Actions//Football Fixtures//EN" >> $ICS_FILE

          TEAM_ID=$(cat ./assets/teamid.txt)

          jq -r --arg team_id "$TEAM_ID" '
            .response[]
            | select(.teams.home.id == ($team_id|tonumber) or .teams.away.id == ($team_id|tonumber))
            | . as $fx
            | ($fx.fixture.date | sub("\\+00:00$"; "Z") | fromdate) as $start_ts
            | ($start_ts | strftime("%Y%m%dT%H%M%SZ")) as $dtstart_fmt
            | ($start_ts + 7200 | strftime("%Y%m%dT%H%M%SZ")) as $dtend_fmt
            | (
                ($fx.teams.home.name)
                + (if $fx.fixture.status.short=="FT"
                   then " " + ($fx.goals.home|tostring) + " v " + ($fx.goals.away|tostring) + " "
                   else " v "
                   end)
                + ($fx.teams.away.name)
                + (if $fx.league.type == "Cup" then " (\($fx.league.name))" else "" end)
              ) as $summary
            | "BEGIN:VEVENT\nUID:\($fx.fixture.id)@\($fx.league.id).football"
              + "\nDTSTAMP:" + (now|strftime("%Y%m%dT%H%M%SZ"))
              + "\nDTSTART:" + $dtstart_fmt
              + "\nDTEND:" + $dtend_fmt
              + "\nSUMMARY:" + $summary
              + "\nDESCRIPTION:" + ("Referee: " + ($fx.fixture.referee // "TBD"))
              + "\nLOCATION:" + ($fx.fixture.venue.name // "Unknown")
              + "\nEND:VEVENT"
          ' tmp/fixtures.json >> $ICS_FILE

          echo "END:VCALENDAR" >> $ICS_FILE

      - name: Commit and push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add public/cal/fixtures.ics
          git commit -m "Update fixtures.ics" || echo "No changes to commit"
          git push
