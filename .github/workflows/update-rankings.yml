name: Update Rankings and Fixtures

on:
  schedule:
    - cron: "0 * * * *" # every hour
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Fetch full season fixtures
        run: |
          TEAM_ID=$(cat ./assets/teamid.txt)
          mkdir -p tmp
          SEASON=$(date +%Y)
          echo "ðŸ“… Fetching full season fixtures for team $TEAM_ID, season $SEASON"
          curl -s --request GET \
            --url "https://v3.football.api-sports.io/fixtures?season=$SEASON&team=$TEAM_ID" \
            --header "x-apisports-key: ${{ secrets.FOOTBALL_API_KEY }}" \
            -o tmp/fixtures.json

      - name: Generate ICS for Team
        run: |
          ICS_FILE=public/cal/fixtures.ics
          TEAM_ID=$(cat ./assets/teamid.txt)
          mkdir -p public/cal

          echo "BEGIN:VCALENDAR" > $ICS_FILE
          echo "VERSION:2.0" >> $ICS_FILE
          echo "PRODID:-//GitHub Actions//Football Fixtures//EN" >> $ICS_FILE

          jq -r --arg team_id "$TEAM_ID" '
            .response[]
            | select(.teams.home.id == ($team_id|tonumber) or .teams.away.id == ($team_id|tonumber))
            | . as $fx
            # Normalize date to UTC Z format
            | ($fx.fixture.date | sub("\\+00:00$";"Z")) as $dtstart
            # Format start and end times
            | ($dtstart | gsub("[-:]";"") | .[0:15]) as $dtstart_fmt
            | ($dtstart | fromdate + 7200 | strftime("%Y%m%dT%H%M%SZ")) as $dtend_fmt
            # Build event summary
            | (
                if $fx.teams.home.id == ($team_id|tonumber) then
                  $home = $fx.teams.home.name
                  $away = $fx.teams.away.name
                  $home_score = $fx.goals.home
                  $away_score = $fx.goals.away
                else
                  $home = $fx.teams.away.name
                  $away = $fx.teams.home.name
                  $home_score = $fx.goals.away
                  $away_score = $fx.goals.home
                end
              )
            | $summary = ($home + (if $fx.fixture.status.short=="FT" then " \($home_score) v \($away_score)" else "" end) + " v " + $away + (if $fx.league.type != "League" then " (\($fx.league.name))" else "" end))
            | "BEGIN:VEVENT\nUID:\($fx.fixture.id)@\($fx.league.id).football\nDTSTAMP:" + (now|strftime("%Y%m%dT%H%M%SZ")) +
              "\nDTSTART:" + $dtstart_fmt +
              "\nDTEND:" + $dtend_fmt +
              "\nSUMMARY:" + $summary +
              "\nDESCRIPTION:Referee: " + ($fx.fixture.referee // "TBD") +
              "\nLOCATION:" + ($fx.fixture.venue.name // "Unknown") +
              "\nEND:VEVENT"
          ' tmp/fixtures.json >> $ICS_FILE

          echo "END:VCALENDAR" >> $ICS_FILE

      - name: Commit and push
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add public/cal/fixtures.ics
          git commit -m "Update fixtures.ics" || echo "No changes to commit"
          git push
