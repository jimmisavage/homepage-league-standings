name: Update Logos

on:
  schedule:
    - cron: '0 4 * * 1' # Runs every Monday at 4 AM
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-logos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y libcairo2

      - name: Install Python Dependencies
        run: pip install beautifulsoup4 requests cairosvg

      - name: Fetch, Convert, and Save New Logos
        shell: python
        run: |
          import os, json, requests
          from bs4 import BeautifulSoup
          import cairosvg

          HEADERS = {'User-Agent': 'Mozilla/5.0'}
          LEAGUE_SLUGS = ["premier-league", "championship", "league-one", "league-two"]
          output_dir = 'assets/logos'
          os.makedirs(output_dir, exist_ok=True)

          existing_logos = {f.split('.')[0] for f in os.listdir(output_dir)}
          new_logos_found = False

          for slug in LEAGUE_SLUGS:
              print(f"--- Checking {slug} for new teams ---")
              table_url = f"https://www.bbc.co.uk/sport/football/{slug}/table"
              try:
                  html_content = requests.get(table_url, headers=HEADERS).text
                  soup = BeautifulSoup(html_content, 'html.parser')
                  table = soup.find('table', {'data-testid': 'football-table'})
                  tbody = table.find('tbody')

                  for row in tbody.find_all('tr'):
                      cells = row.find_all(['th', 'td'])
                      if len(cells) < 10: continue
                      
                      team_name_span = cells[0].find('span', class_='visually-hidden')
                      team_name = team_name_span.get_text(strip=True) if team_name_span else None
                      file_slug = ''.join(c for c in team_name.lower().replace('&', 'and').replace(' ', '-') if c.isalnum() or c == '-') if team_name else None
                      
                      if team_name and file_slug and file_slug not in existing_logos:
                          logo_img = cells[0].find('img', class_=lambda c: c and 'BadgeImage' in c)
                          logo_url_svg = logo_img['src'] if logo_img else None
                          if logo_url_svg:
                              try:
                                  print(f"  -> New team found: {team_name}. Downloading logo.")
                                  output_path = f"{output_dir}/{file_slug}.png"
                                  svg_content = requests.get(logo_url_svg).content
                                  cairosvg.svg2png(bytestring=svg_content, write_to=output_path)
                                  new_logos_found = True
                              except Exception as e:
                                  print(f"    ‚ö†Ô∏è FAILED to convert SVG for {team_name}: {e}")
              except Exception as e:
                  print(f"‚ö†Ô∏è Could not process {slug}: {e}")
                  continue
          
          if not new_logos_found:
              print("‚úÖ No new logos to add.")

      - name: Commit New Logos
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add assets/logos/*.png
          if git diff --staged --quiet; then
            echo "üü¢ No new logos to commit."
          else
            git commit -m "üñºÔ∏è Add new team logos"
            git push
          fi
